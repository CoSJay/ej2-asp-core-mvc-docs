@{
    var valueAccessor = "valueAccessorFn";
}


@Html.EJS().Grid("Grid").DataSource((IEnumerable<object>)ViewBag.Datasource).Created("created").AllowTextWrap(true).Columns(col =>
{
    col.Field("OrderID").HeaderText("Order ID").IsPrimaryKey(true).Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).ValidationRules(new { required = "true" }).Add();
    col.Field("CustomerID").HeaderText("Customer Name").Width("150").Type("string").Add();
    col.Field("Freight").HeaderText("Freight").Type("number").Width("120").Format("C2").EditType("numericedit").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
    col.Field("ShipCity").HeaderText("Ship Address").Type("string").Width("150").DisableHtmlEncode(false).ValueAccessor("valueAccessor").Edit(new { create = "create", read = "read", destroy = "destroy", write = "write" }).Add();

}).AllowPaging().EditSettings(edit => { edit.AllowAdding(true).AllowEditing(true).AllowDeleting(true).Mode(Syncfusion.EJ2.Grids.EditMode.Normal); }).Toolbar(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" }).Render()

<script>
    var textEditor;
    var element
    function create(args) {
        element = document.createElement('textarea');
        return element;
    }
    function read(e) {
        return textEditor.value;
    }
    function destroy() {
        textEditor.destroy();
    }
    function write(args) {
        textEditor = new ej.inputs.TextBox({
            multiline: true,
            value: args.rowData[args.column.field],
            floatLabelType: 'Auto',
        });
        textEditor.appendTo(element);
    }
    function valueAccessorFn(field, data, column) {
        var value = data[field];
        if (value != undefined) {
            return value.split('\n').join('<br>');
        } else {
            return '';
        }
    }

    function created() {
        this.keyConfigs.enter = '';
    }
</script>